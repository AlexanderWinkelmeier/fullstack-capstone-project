name: 'CI/CD'

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  lint_js:
    name: Lint JavaScript Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Aktualisiert auf eine moderne Version

      - name: Install JSHint
        run: npm install jshint --global

      - name: Create JSHint Config
        run: |
          # Erstelle .jshintrc Datei mit ES8 Konfiguration
          echo '{
            "esversion": 8,
            "node": true,
            "strict": false
          }' > .jshintrc

      - name: Run Linter
        run: |
          # JSHint mit expliziter ES-Version auf alle JS-Dateien
          find ./giftlink-backend -name "*.js" -not -path "*/node_modules/*" -exec jshint --esversion=8 {} +
          echo "Linted all the js files successfully"

  client_build:
    name: Build client
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Aktualisiert auf eine moderne Version

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run build
        run: |
          cd giftlink-frontend
          npm ci  # Verwendet npm ci f√ºr deterministische Builds
          npm run build
          echo "Client-side build successfully"
